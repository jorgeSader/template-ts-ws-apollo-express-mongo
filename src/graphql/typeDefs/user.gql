# Types
type User implements Node & Timestamps {
  email: String!
  password: String!
  profile: Profile!
  isActive: Boolean!
  token: String

  # Interface required
  _id: ID!
  createdAt: Date!
  updatedAt: Date!
}

#inputs
input UserInput {
  _id: ID!
  email: String
  password: String
  profile: ProfileInput
  isActive: Boolean
  token: String
}

# Payloads
type UserPayload {
  userErrors: [UserError]!
  user: User
}

# Cursor Based Pagination
type UserConnection {
  totalCount: Int!
  edges: [UserEdge!]!
  pageInfo: PageInfo!
  userErrors: [UserError!]!
}

type UserEdge {
  cursor: String
  node: User
}
